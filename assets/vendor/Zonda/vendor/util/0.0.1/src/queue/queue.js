// Generated by CoffeeScript 1.6.3
define(function(require, exports, module) {
  var Backbone, Queue, _;
  _ = require("underscore");
  Backbone = require("backbone");
  return Queue = (function() {
    function Queue(name, size) {
      this.name = name;
      this.size = size;
      _.extend(this, Backbone.Events);
      this.data = [];
    }

    Queue.prototype.checkAll = function() {
      var cell, counter, _i, _len, _ref;
      if (this.size) {
        counter = this.size;
      } else {
        counter = this.data.length;
      }
      _ref = this.data;
      for (_i = 0, _len = _ref.length; _i < _len; _i++) {
        cell = _ref[_i];
        if (cell.status === "error") {
          this.trigger("" + this.name + ":queue:error", cell);
          break;
        }
        if (cell.status === "success") {
          counter -= 1;
        }
      }
      if (counter === 0) {
        return this.trigger("" + this.name + ":queue:success");
      }
    };

    Queue.prototype.setter = function(name, status, info) {
      var cell, _i, _is_new, _len, _ref;
      _is_new = true;
      _ref = this.data;
      for (_i = 0, _len = _ref.length; _i < _len; _i++) {
        cell = _ref[_i];
        if (cell.name === name) {
          _is_new = false;
          cell.status = status;
          cell.info = info;
        }
      }
      if (_is_new) {
        return this.data.push({
          name: name,
          status: status,
          info: info
        });
      } else {
        return this.checkAll();
      }
    };

    return Queue;

  })();
});
