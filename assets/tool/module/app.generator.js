// Generated by CoffeeScript 1.6.3
var CONFIG, colors, err, exec, fs, path, project_dir;

require("js-yaml");

fs = require("fs");

path = require("path");

colors = require("colors");

exec = require('child_process').exec;

console.log("\n\n Zonda Tool".bold + ":  Generate app...");

project_dir = path.resolve('./', '../');

CONFIG = require("" + project_dir + "/etc/zonda.yml");

try {
  fs.readdirSync("" + project_dir + "/dist");
} catch (_error) {
  err = _error;
  if (err !== null) {
    fs.mkdirSync("" + project_dir + "/dist");
  }
}

switch (CONFIG.pattern) {
  case "dev":
    console.log(("\n   Generate simple " + CONFIG.app_bootstrap + "-" + CONFIG.version + ".js...:  ").bold);
    fs.writeFileSync("" + project_dir + "/dist/" + CONFIG.app_bootstrap + "-" + CONFIG.version + ".js", "seajs.use(\"" + CONFIG.web_root + "/src/" + CONFIG.app_bootstrap + "\");");
    console.log("   >>".bold + " Success!".green);
    console.log("\n\n Zonda Tool".bold + " >> " + "Generate App" + " Success!\n".bold.yellow);
    break;
  case "prod":
    console.log(("\n   Generate combo " + CONFIG.app_bootstrap + "-" + CONFIG.version + ".js...:  ").bold);
    exec("cd " + project_dir + "/ && grunt build", {
      encoding: ""
    }, function(err, stdout, stderr) {
      var _app_content;
      if (err !== null) {
        console.log("   >>".bold + " Error!".red.inverse);
        console.log("     >>".bold + err);
        return null;
      }
      _app_content = fs.readFileSync("" + project_dir + "/dist/.build/" + CONFIG.app_bootstrap + ".js");
      fs.writeFileSync("" + project_dir + "/dist/" + CONFIG.app_bootstrap + "-" + CONFIG.version + ".js", _app_content);
      fs.appendFileSync("" + project_dir + "/dist/" + CONFIG.app_bootstrap + "-" + CONFIG.version + ".js", ";seajs.use(\"" + CONFIG.app_bootstrap + "\");");
      console.log("   >>".bold + " Success!".green);
      return console.log("\n\n Zonda Tool".bold + " >> " + "Generate App" + " Success!\n".bold.yellow);
    });
}
