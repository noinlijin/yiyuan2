// Generated by CoffeeScript 1.6.3
var CONFIG, Compile, Main, colors, exec, fs, input_dir, lessc_command, main_file, output_dir, path, project_dir, queue, recursivePath;

require("js-yaml");

colors = require("colors");

fs = require('fs');

exec = require('child_process').exec;

path = require('path');

recursivePath = require("./path.recursive");

console.log("\n\n Zonda Tool".bold + ":  JIT Less Compiler Running...");

lessc_command = "lessc -x";

project_dir = path.resolve('./', '../');

CONFIG = require("" + project_dir + "/etc/zonda.yml");

output_dir = "" + project_dir + "/dist";

input_dir = "" + project_dir + "/ui/less";

main_file = "" + CONFIG.less_compiler.bootstrap + ".less";

queue = {};

Compile = function(file, callback) {
  var command;
  command = "" + lessc_command + " " + file + " > " + output_dir + "/" + CONFIG.less_compiler.destination + "-" + CONFIG.version + ".css";
  return exec(command, {
    encoding: ""
  }, callback);
};

Main = function(file_name, file_path) {
  var base_name, id;
  if (!/\.less$/.test(file_name)) {
    return false;
  }
  id = (file_path.replace(input_dir, "")) + file_name;
  if (queue[id] === void 0) {
    queue[id] = "compiling";
  } else {
    return null;
  }
  base_name = path.basename(file_name, ".less");
  console.log("\n   <- ".bold + "compiling:".green);
  console.log(("     " + (file_path.replace(input_dir, ""))) + (" " + file_name).yellow);
  return Compile("" + input_dir + "/" + main_file, function(err, stdout, stderr) {
    delete queue[id];
    if (err !== null) {
      console.log("   >>".bold + " Error!".red.inverse);
      return console.log("     " + err);
    } else {
      return console.log("   >>".bold + " Success!".green + " no errro.");
    }
  });
};

Main(main_file, "" + input_dir);

recursivePath("" + input_dir, function(type, path_cell) {
  if (type === "dir") {
    return fs.watch(path_cell.realpath, function(event, name) {
      if (event === "change") {
        return Main(name, path_cell.realpath);
      }
    });
  }
}, 10);

fs.watch("" + input_dir, function(event, name) {
  if (event === "change") {
    return Main(name, "" + input_dir);
  }
});

module.exports = Main;
